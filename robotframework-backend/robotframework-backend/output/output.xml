<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20181023 19:15:42.465" generator="Robot 3.0.4 (Python 2.7.12 on linux2)">
<suite source="/home/robot/workspace/robotframework-backend/Hello-http-library-v3.robot" id="s1" name="Hello-http-library-v3">
<test id="s1-t1" name="Test case 1 - Request data from a client with ID 1">
<kw name="Request information of a specific clients and check status code" library="client-operations-control">
<arguments>
<arg>1</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http content localhost}</arg>
<arg>${http context variable}</arg>
</arguments>
<msg timestamp="20181023 19:15:42.619" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20181023 19:15:42.619" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20181023 19:15:42.620" starttime="20181023 19:15:42.618"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get client endpoint}${client id}</arg>
</arguments>
<status status="PASS" endtime="20181023 19:15:42.659" starttime="20181023 19:15:42.620"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status code}</var>
</assign>
<msg timestamp="20181023 19:15:42.669" level="INFO">${status code} = 200 OK</msg>
<status status="PASS" endtime="20181023 19:15:42.669" starttime="20181023 19:15:42.668"></status>
</kw>
<kw name="Should Start With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not start with the string ``str2``.</doc>
<arguments>
<arg>${status code}</arg>
<arg>${response 200}</arg>
</arguments>
<status status="PASS" endtime="20181023 19:15:42.670" starttime="20181023 19:15:42.669"></status>
</kw>
<status status="PASS" endtime="20181023 19:15:42.670" starttime="20181023 19:15:42.616"></status>
</kw>
<status status="PASS" endtime="20181023 19:15:42.671" critical="yes" starttime="20181023 19:15:42.615"></status>
</test>
<test id="s1-t2" name="Test case 2 - Request data from all clients">
<kw name="Request information of all clients and check status code" library="client-operations-control">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http content localhost}</arg>
<arg>${http context variable}</arg>
</arguments>
<msg timestamp="20181023 19:15:42.684" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20181023 19:15:42.684" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20181023 19:15:42.685" starttime="20181023 19:15:42.683"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get client endpoint}</arg>
</arguments>
<status status="PASS" endtime="20181023 19:15:42.722" starttime="20181023 19:15:42.685"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status code}</var>
</assign>
<msg timestamp="20181023 19:15:42.725" level="INFO">${status code} = 200 OK</msg>
<status status="PASS" endtime="20181023 19:15:42.725" starttime="20181023 19:15:42.723"></status>
</kw>
<kw name="Should Start With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not start with the string ``str2``.</doc>
<arguments>
<arg>${status code}</arg>
<arg>${response 200}</arg>
</arguments>
<status status="PASS" endtime="20181023 19:15:42.726" starttime="20181023 19:15:42.725"></status>
</kw>
<status status="PASS" endtime="20181023 19:15:42.726" starttime="20181023 19:15:42.678"></status>
</kw>
<status status="PASS" endtime="20181023 19:15:42.727" critical="yes" starttime="20181023 19:15:42.673"></status>
</test>
<test id="s1-t3" name="Test case 3 - Create new client">
<kw name="Create a new client with a post request" library="client-operations-control">
<kw name="Generate A Random Client" library="client-operations-control">
<assign>
<var>${client Json}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20181023 19:15:42.732" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20181023 19:15:42.732" starttime="20181023 19:15:42.731"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20181023 19:15:42.733" level="INFO">${name} = wixjvptpaq</msg>
<status status="PASS" endtime="20181023 19:15:42.733" starttime="20181023 19:15:42.732"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>14516121010000</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20181023 19:15:42.734" level="INFO">${timestamp} = 14516121010000</msg>
<status status="PASS" endtime="20181023 19:15:42.734" starttime="20181023 19:15:42.733"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20181023 19:15:42.736" level="INFO">${email} = wixjvptpaq@email.com</msg>
<status status="PASS" endtime="20181023 19:15:42.736" starttime="20181023 19:15:42.735"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>12</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${Social Security Number}</var>
</assign>
<msg timestamp="20181023 19:15:42.737" level="INFO">${Social Security Number} = 956699021147</msg>
<status status="PASS" endtime="20181023 19:15:42.737" starttime="20181023 19:15:42.736"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>FM</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20181023 19:15:42.739" level="INFO">${gender} = F</msg>
<status status="PASS" endtime="20181023 19:15:42.739" starttime="20181023 19:15:42.737"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${timestamp}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${Social Security Number}</arg>
</arguments>
<assign>
<var>${client dictionary}</var>
</assign>
<msg timestamp="20181023 19:15:42.743" level="INFO">${client dictionary} = {u'id': u'100', u'name': u'wixjvptpaq', u'createDate': u'14516121010000', u'email': u'wixjvptpaq@email.com', u'gender': u'F', u'socialSecurityNumber': u'956699021147'}</msg>
<status status="PASS" endtime="20181023 19:15:42.743" starttime="20181023 19:15:42.739"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${client dictionary}</arg>
</arguments>
<assign>
<var>${client Json}</var>
</assign>
<msg timestamp="20181023 19:15:42.744" level="INFO">${client Json} = {"id": "100", "name": "wixjvptpaq", "createDate": "14516121010000", "email": "wixjvptpaq@email.com", "gender": "F", "socialSecurityNumber": "956699021147"}</msg>
<status status="PASS" endtime="20181023 19:15:42.745" starttime="20181023 19:15:42.744"></status>
</kw>
<msg timestamp="20181023 19:15:42.745" level="INFO">${client Json} = {"id": "100", "name": "wixjvptpaq", "createDate": "14516121010000", "email": "wixjvptpaq@email.com", "gender": "F", "socialSecurityNumber": "956699021147"}</msg>
<status status="PASS" endtime="20181023 19:15:42.745" starttime="20181023 19:15:42.730"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http content localhost}</arg>
<arg>${http context variable}</arg>
</arguments>
<msg timestamp="20181023 19:15:42.747" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20181023 19:15:42.747" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20181023 19:15:42.748" starttime="20181023 19:15:42.746"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${client Json}</arg>
</arguments>
<msg timestamp="20181023 19:15:42.749" level="INFO">Request body set to "{"id": "100", "name": "wixjvptpaq", "createDate": "14516121010000", "email": "wixjvptpaq@email.com", "gender": "F", "socialSecurityNumber": "956699021147"}".</msg>
<status status="PASS" endtime="20181023 19:15:42.749" starttime="20181023 19:15:42.748"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header content Json}</arg>
</arguments>
<msg timestamp="20181023 19:15:42.750" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20181023 19:15:42.750" starttime="20181023 19:15:42.749"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${post client endpoint}</arg>
</arguments>
<status status="PASS" endtime="20181023 19:15:42.798" starttime="20181023 19:15:42.750"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status code}</var>
</assign>
<msg timestamp="20181023 19:15:42.798" level="INFO">${status code} = 204 No Content</msg>
<status status="PASS" endtime="20181023 19:15:42.799" starttime="20181023 19:15:42.798"></status>
</kw>
<kw name="Should Start With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not start with the string ``str2``.</doc>
<arguments>
<arg>${status code}</arg>
<arg>${response 204}</arg>
</arguments>
<status status="PASS" endtime="20181023 19:15:42.800" starttime="20181023 19:15:42.800"></status>
</kw>
<status status="PASS" endtime="20181023 19:15:42.800" starttime="20181023 19:15:42.729"></status>
</kw>
<status status="PASS" endtime="20181023 19:15:42.807" critical="yes" starttime="20181023 19:15:42.728"></status>
</test>
<status status="PASS" endtime="20181023 19:15:42.808" starttime="20181023 19:15:42.469"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="3">Critical Tests</stat>
<stat fail="0" pass="3">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Hello-http-library-v3" pass="3">Hello-http-library-v3</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
